version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: ota-server-backend
    restart: unless-stopped
    volumes:
      - ./firmware:/app/firmware
      - ./devices.json:/app/devices.json
      - ./logs:/app/logs
    environment:
      - OTA_SERVER_SHARED_SECRET_KEY=${OTA_SERVER_SHARED_SECRET_KEY:-change-this-key-in-production}
      - OTA_SERVER_ADMIN_API_KEY=${OTA_SERVER_ADMIN_API_KEY:-change-admin-api-key-in-production}
      - OTA_SERVER_SERVER_HOST=0.0.0.0
      - OTA_SERVER_SERVER_PORT=5000
      - OTA_SERVER_LOG_LEVEL=${OTA_SERVER_LOG_LEVEL:-INFO}
      - OTA_SERVER_DEBUG_MODE=false
      - OTA_SERVER_DEVICES_FILE=/app/devices.json
      - OTA_SERVER_FIRMWARE_DIR=/app/firmware
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - ota-network

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: ota-server-frontend
    restart: unless-stopped
    ports:
      - "${OTA_SERVER_UI_PORT:-80}:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - ota-network

networks:
  ota-network:
    driver: bridge