version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: ota-server-backend
    restart: unless-stopped
    ports:
      - "${OTA_SERVER_SERVER_PORT:-5000}:5000"
    volumes:
      - ./backend:/app/backend
      - ./firmware:/app/firmware
      - ./devices.json:/app/devices.json
      - ./logs:/app/logs
    environment:
      - OTA_SERVER_SHARED_SECRET_KEY=${OTA_SERVER_SHARED_SECRET_KEY:-dev-shared-key}
      - OTA_SERVER_ADMIN_API_KEY=${OTA_SERVER_ADMIN_API_KEY:-dev-admin-key}
      - OTA_SERVER_SERVER_HOST=0.0.0.0
      - OTA_SERVER_SERVER_PORT=5000
      - OTA_SERVER_LOG_LEVEL=${OTA_SERVER_LOG_LEVEL:-INFO}
      - OTA_SERVER_DEBUG_MODE=true
      - OTA_SERVER_DEVICES_FILE=/app/devices.json
      - OTA_SERVER_FIRMWARE_DIR=/app/firmware
    command: python -m uvicorn backend.app.main:app --host 0.0.0.0 --port 5000 --reload
    networks:
      - ota-network-dev

  frontend:
    image: node:20-alpine
    container_name: ota-server-frontend
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "${OTA_SERVER_UI_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:${OTA_SERVER_SERVER_PORT:-5000}
    depends_on:
      - backend
    networks:
      - ota-network-dev

networks:
  ota-network-dev:
    driver: bridge